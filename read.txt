# Proyecto CRUD Flutter + PHP + MySQL

Este proyecto es una aplicaci√≥n simple para gestionar productos y categor√≠as.  
El **backend** est√° hecho en PHP + MySQL y el **frontend** en Flutter.  

---

## üìÅ Estructura del proyecto

mi_proyecto/
‚îú‚îÄ backend/ ‚Üê C√≥digo PHP (productos.php, db.php, etc.)
‚îú‚îÄ frontend/ ‚Üê Proyecto Flutter
‚îÇ ‚îú‚îÄ lib/
‚îÇ ‚îÇ ‚îú‚îÄ main.dart
‚îÇ ‚îÇ ‚îú‚îÄ productos_list.dart
‚îÇ ‚îÇ ‚îî‚îÄ producto_form.dart
‚îÇ ‚îî‚îÄ screenshots/ ‚Üê Capturas de pantalla
‚îú‚îÄ README.md


---

---______________________________

## üóÑÔ∏è Base de datos MySQL

### Crear base de datos
```sql
CREATE DATABASE tienda;
USE tienda;

CREATE TABLE categorias (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nombre VARCHAR(100) NOT NULL
);

-- Categor√≠as de ejemplo
INSERT INTO categorias (nombre) VALUES ('Electr√≥nica'), ('Ropa'), ('Hogar');

CREATE TABLE productos (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nombre VARCHAR(100) NOT NULL,
    descripcion TEXT,
    precio DECIMAL(10,2) NOT NULL,
    categoria_id INT,
    FOREIGN KEY (categoria_id) REFERENCES categorias(id)
);

-- Productos de ejemplo
INSERT INTO productos (nombre, descripcion, precio, categoria_id) VALUES
('Celular', 'Tel√©fono Android', 250.00, 1),
('Laptop', 'Port√°til para oficina', 800.00, 1),
('Camiseta', 'Algod√≥n talla M', 15.00, 2),
('Sof√°', 'Sof√° 3 plazas', 300.00, 3);

________________________________________________

## ‚öôÔ∏è Backend (PHP + MySQL)

### Endpoints disponibles:

- **GET /productos.php** ‚Üí Listar todos los productos con su categor√≠a  
- **POST /productos.php** ‚Üí Crear producto  
- **PUT /productos.php** ‚Üí Editar producto  
- **DELETE /productos.php?id=X** ‚Üí Eliminar producto  

> Nota: Aseg√∫rate de configurar la base de datos en `db.php` con tus credenciales MySQL.  

---

## üìå Frontend (Flutter)

### Funcionalidades:

- Lista de productos en **tarjetas** con nombre, descripci√≥n, precio y categor√≠a  
- Formulario para **crear y editar** productos  
- Bot√≥n para **eliminar** productos  
- Manejo de errores y mensajes de confirmaci√≥n  
- Actualizaci√≥n autom√°tica de la lista al crear/editar/eliminar  

### Requisitos para correr Flutter:

- Tener instalado Flutter SDK: [https://flutter.dev/docs/get-started/install](https://flutter.dev/docs/get-started/install)  
- Navegador Chrome o dispositivo m√≥vil  
- Conexi√≥n a la misma red que tu backend (si usas IP local)  

### Instrucciones:

1. Abrir la carpeta `frontend` en VS Code o Android Studio  
2. Ejecutar:
```bash
flutter pub get
flutter run -d chrome
